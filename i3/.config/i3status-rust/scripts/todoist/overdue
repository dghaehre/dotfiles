#!/usr/bin/env janet
(import sh)
(import json)

(defn read-from-file [file-path]
  (let [f         (file/open file-path :r)
        content   (file/read f :all)]
    (file/close f)
    content))

(defn setup []
  (let [path  (string (os/getenv "HOME") "/.todoist.token")
        token (-> (read-from-file path) (string/trim))]
    (setdyn :todoist/token token)))

(defn token []
  (dyn :todoist/token))

(defn get-todoist [path]
  (let [auth (string "Authorization: Bearer " (token))
        res (sh/$< curl -s -X GET ,path  -H ,auth)]
    (json/decode res)))

(defn get-overdues []
  (->> (get-todoist "https://api.todoist.com/rest/v1/tasks?filter=due%20before%3A%20%2B2%20minutes")
      (map |(get $0 "content"))))

(defn display [l]
  (if (nil? l)
    (json/encode {:icon "time" :text "" :state "Warning"})
    (if (= 1 (length l))
      (json/encode {:icon "time" :text (get l 0) :state "Warning"})
      (if (= 0 (length l))
        (json/encode {:icon "time" :text "" :state "Warning"})
        (json/encode {:icon "time" :text (string "ovedue: " (length l)) :state "Warning"})))))

(defn main [& args]
  (setup)
  (try
    (-> (get-overdues)
        (display)
        (prin))
    ([_] (prin (display "")))))
