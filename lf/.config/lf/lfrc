##
## Nice defaults
## 
set icons true
set ignorecase true
# Show hidden files
set hidden true
# interpreter for shell commands
set shell sh
set shellopts '-eu'
# set internal field separator (IFS) to "\n" for shell commands
set ifs "\n"

# Make display more minimal
set ratios 1:2

# Bindings
# Remove some defaults
map c
map m
map o
map n
map sn
map d
map f

map cc clear

# Use custom preview
set previewer ~/.config/lf/preview

# define a custom 'open' command
# This command is called when current file is not a directory. You may want to
# use either file extensions and/or mime types here. Below uses an editor for
# text files and a file opener for the rest.
cmd open ${{
    test -L $f && f=$(readlink -f $f)
    case $(file --mime-type $f -b) in
        text/*) $EDITOR $fx;;
        *) for f in $fx; do setsid $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}
# execute current file (must be executable)
map X $$f

# New file
cmd newfile %touch "$@"
map nf push :newfile<space>

# New dir
cmd mkdir %mkdir -p "$@"
map nd push :mkdir<space>

map <c-n> search-next
map <c-p> search-prev

cmd toggle-executable ${{
  if [[ -x "$f" ]]
    then
      chmod u-x $f
    else
      chmod u+x $f
  fi
  lf -remote "send reload"
}}
map cx toggle-executable

cmd change-permission ${{
  chmod -R "$@" $f
  lf -remote "send reload"
}}
map cp push :change-permission<space>

cmd change-owner ${{
  chown -R "$@" $f
  lf -remote "send reload"
}}
map co push :change-owner<space>

# TODO: implement cd

# Move
map m cut

# Shortcuts
map gh cd ~
map gd cd ~/Downloads
map gw cd ~/wikis
map gij cd ~/wikis/work/Inbox
map giw cd ~/wikis/vimwiki/Inbox
map gp cd ~/projects
map g. cd ~/dotfiles

map dd delete

cmd fzf_grep ${{
  res=$(fzf --ansi --bind "change:reload:rg --column --line-number --color=always --no-heading --smart-case {q} || true" --preview "echo {} | awk -F ':' '{print \$1}' | xargs bat --color=always")
  name="$(echo $res | awk -F ':' '{print $1}')"
  lf -remote "send $id select \"$name\""
}}
map sg fzf_grep

cmd fzf_jump ${{
  res="$(find . -maxdepth 5 | fzf --header='Jump to location' --preview-window=right,70% --preview 'bat --color always {}')"
  if [ -f "$res" ]; then
    cmd="select"
  elif [ -d "$res" ]; then
    cmd="cd"
  fi
  lf -remote "send $id $cmd \"$res\""
}}
map sf fzf_jump

# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}
